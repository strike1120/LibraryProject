CREATE TABLE BOOK 
(
  BOOK_NUMBER	NUMBER PRIMARY KEY, --책 일련번호
  BOOK_TITLE	VARCHAR2(100)  NOT NULL, --도서 제목
  BOOK_AUTHOR	VARCHAR2(30)  NOT NULL, --저자
  BOOK_RENT_YN	CHAR(1) DEFAULT 'Y', --대여 가능여부 (BOOK_STOCK >= 1 이면 대여가능)
  BOOK_STOCK NUMBER REFERENCES bookQuantity(BOOK_STOCK)
);

CREATE SEQUENCE BOOK_SEQ;

CREATE TABLE bookQuantity (
    BOOK_NUMBER REFERENCES BOOK(BOOK_NUMNBER), -- 도서 번호
    BOOK_TITLE VARCHAR2(100), --도서 제목
    BOOK_STOCK  NUMBER DEFAULT 1 PRIMARY KEY  -- 도서 수량
);


CREATE TABLE USERS1 --회원 테이블
(
  USER_ID VARCHAR2(20) NOT NULL,
  USER_PASSWORD VARCHAR2(20) NOT NULL,
  USER_NUMBER	NUMBER PRIMARY KEY, --회원 (일련)번호  
  USER_NAME	VARCHAR2(30) NOT NULL, -- 회원 이름
  USER_PHONENUM	VARCHAR2(15), --폰번호
  USER_MAIL	VARCHAR2(50), --이메일
  USER_RENTED_BOOK VARCHAR2(20),-- 대여 도서명
  USER_RENTED_BOOK_QUANTITY NUMBER --대여 도서권수
);
CREATE SEQUENCE USER_SEQ;


CREATE TABLE RENT 
(
  RENT_NUMBER	NUMBER PRIMARY KEY, --대여 (일련)번호
  USER_NUMBER	NUMBER NOT NULL REFERENCES USERS1(USER_NUMBER), --회원 일련번호 (누가 빌려갔는지)
  BOOK_NUMBER	NUMBER NOT NULL REFERENCES BOOK(BOOK_NUMBER), --도서 일련번호 (어떤 책을 빌려갔는지)
  RENT_DATE	DATE, --도서 대출일 (언제 빌려갔는지)
  RENT_RETURN_DATE	DATE, --도서 반납 예정일 (도서대출일+20)
  RENT_RETURN_YN CHAR(1), -- 도서 반납 여부(Y/N)
  BOOK_STOCK NUMBER REFERENCES bookQuantity(BOOK_STOCK) --도서 수량 (현재 몇권 남아있는지)
);
CREATE SEQUENCE RENT_SEQ;